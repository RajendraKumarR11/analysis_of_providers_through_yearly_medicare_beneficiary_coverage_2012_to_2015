<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xml:base='https://prod-useast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='YearlyAnalysisofMedicareBeneficiaryCoveragethroughProviders2012-2015' path='/t/medicareprovideranalysis/workbooks' revision='1.0' site='medicareprovideranalysis' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='FactProviderDetail (MedicareDW)' inline='true' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-1548S09\SS2020' name='sqlserver.0j21ac60xzl8rs16gugad00dqemt (copy)'>
            <connection authentication='sspi' class='sqlserver' dbname='MedicareDW' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' port='0' server='DESKTOP-1548S09\SS2020' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FactProviderDetail].[ProviderTypeCode]' />
              <expression op='[DimProviderType].[ProviderTypeCode]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[FactProviderDetail].[ProviderNameID]' />
                <expression op='[DimProviderName].[NameID]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[FactProviderDetail].[ProviderAddressID]' />
                  <expression op='[DimProviderAddress].[ProviderAddressID]' />
                </expression>
              </clause>
              <relation connection='sqlserver.0j21ac60xzl8rs16gugad00dqemt (copy)' name='FactProviderDetail' table='[dbo].[FactProviderDetail]' type='table' />
              <relation connection='sqlserver.0j21ac60xzl8rs16gugad00dqemt (copy)' name='DimProviderAddress' table='[dbo].[DimProviderAddress]' type='table' />
            </relation>
            <relation connection='sqlserver.0j21ac60xzl8rs16gugad00dqemt (copy)' name='DimProviderName' table='[dbo].[DimProviderName]' type='table' />
          </relation>
          <relation connection='sqlserver.0j21ac60xzl8rs16gugad00dqemt (copy)' name='DimProviderType' table='[dbo].[DimProviderType]' type='table' />
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[DimProviderAddress].[AddressLine1]' />
          <map key='[AddressLine2]' value='[DimProviderAddress].[AddressLine2]' />
          <map key='[CityName]' value='[DimProviderAddress].[CityName]' />
          <map key='[CountryCode]' value='[DimProviderAddress].[CountryCode]' />
          <map key='[DMEPOSClaim_IND]' value='[FactProviderDetail].[DMEPOSClaim_IND]' />
          <map key='[EnrollmentID]' value='[FactProviderDetail].[EnrollmentID]' />
          <map key='[FirstName]' value='[DimProviderName].[FirstName]' />
          <map key='[HHAClaim_IND]' value='[FactProviderDetail].[HHAClaim_IND]' />
          <map key='[ID]' value='[FactProviderDetail].[ID]' />
          <map key='[LastName]' value='[DimProviderName].[LastName]' />
          <map key='[LastUpdatedDate]' value='[FactProviderDetail].[LastUpdatedDate]' />
          <map key='[MiddleName]' value='[DimProviderName].[MiddleName]' />
          <map key='[NPI]' value='[FactProviderDetail].[NPI]' />
          <map key='[NameID]' value='[DimProviderName].[NameID]' />
          <map key='[NumberOfAmerican Indian_AlaskaNative_Beneficiaries]' value='[FactProviderDetail].[NumberOfAmerican Indian_AlaskaNative_Beneficiaries]' />
          <map key='[NumberOfAsianPacificIslander_ Beneficiaries]' value='[FactProviderDetail].[NumberOfAsianPacificIslander_ Beneficiaries]' />
          <map key='[NumberOfBeneficiaries_AgeLess_ 65]' value='[FactProviderDetail].[NumberOfBeneficiaries_AgeLess_ 65]' />
          <map key='[NumberOfBeneficiaries_Age_ Greater_84]' value='[FactProviderDetail].[NumberOfBeneficiaries_Age_ Greater_84]' />
          <map key='[NumberOfBeneficiaries_Age_65_To_74]' value='[FactProviderDetail].[NumberOfBeneficiaries_Age_65_To_74]' />
          <map key='[NumberOfBeneficiaries_Age_75_ To_84]' value='[FactProviderDetail].[NumberOfBeneficiaries_Age_75_ To_84]' />
          <map key='[NumberOfBeneficiaries_WithRaceNotElsewhereClassified]' value='[FactProviderDetail].[NumberOfBeneficiaries_WithRaceNotElsewhereClassified]' />
          <map key='[NumberOfBlackOrAfricanAmerican_Beneficiaries]' value='[FactProviderDetail].[NumberOfBlackOrAfricanAmerican_Beneficiaries]' />
          <map key='[NumberOfDrugServices]' value='[FactProviderDetail].[NumberOfDrugServices]' />
          <map key='[NumberOfFemaleBeneficiaries]' value='[FactProviderDetail].[NumberOfFemaleBeneficiaries]' />
          <map key='[NumberOfHispanic_Beneficiaries]' value='[FactProviderDetail].[NumberOfHispanic_Beneficiaries]' />
          <map key='[NumberOfMaleBeneficiaries]' value='[FactProviderDetail].[NumberOfMaleBeneficiaries]' />
          <map key='[NumberOfMedicareBeneficiariesWithDrugServices]' value='[FactProviderDetail].[NumberOfMedicareBeneficiariesWithDrugServices]' />
          <map key='[NumberOfMedicareBeneficiariesWithMedicalServices]' value='[FactProviderDetail].[NumberOfMedicareBeneficiariesWithMedicalServices]' />
          <map key='[Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation]' value='[FactProviderDetail].[Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation]' />
          <map key='[Number_Of_BeneficiariesIdentifiedWithCancer]' value='[FactProviderDetail].[Number_Of_BeneficiariesIdentifiedWithCancer]' />
          <map key='[Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease]' value='[FactProviderDetail].[Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease]' />
          <map key='[Number_Of_BeneficiariesIdentifiedWithDiabetes]' value='[FactProviderDetail].[Number_Of_BeneficiariesIdentifiedWithDiabetes]' />
          <map key='[Number_Of_BeneficiariesIdentifiedWithHeartFailure]' value='[FactProviderDetail].[Number_Of_BeneficiariesIdentifiedWithHeartFailure]' />
          <map key='[Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis]' value='[FactProviderDetail].[Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis]' />
          <map key='[NumberofMedical Services]' value='[FactProviderDetail].[NumberofMedical Services]' />
          <map key='[ProviderAddressID (DimProviderAddress)]' value='[DimProviderAddress].[ProviderAddressID]' />
          <map key='[ProviderAddressID]' value='[FactProviderDetail].[ProviderAddressID]' />
          <map key='[ProviderNameID]' value='[FactProviderDetail].[ProviderNameID]' />
          <map key='[ProviderTypeCode (DimProviderType)]' value='[DimProviderType].[ProviderTypeCode]' />
          <map key='[ProviderTypeCode]' value='[FactProviderDetail].[ProviderTypeCode]' />
          <map key='[ProviderTypeDescription]' value='[DimProviderType].[ProviderTypeDescription]' />
          <map key='[RecordedYear]' value='[FactProviderDetail].[RecordedYear]' />
          <map key='[StateCode]' value='[DimProviderAddress].[StateCode]' />
          <map key='[TotalDrugMedicareAllowedAmount]' value='[FactProviderDetail].[TotalDrugMedicareAllowedAmount]' />
          <map key='[TotalDrugMedicarePaymentAmount]' value='[FactProviderDetail].[TotalDrugMedicarePaymentAmount]' />
          <map key='[TotalDrugSubmittedChargeAmount]' value='[FactProviderDetail].[TotalDrugSubmittedChargeAmount]' />
          <map key='[TotalMedicalMedicareAllowedAmount]' value='[FactProviderDetail].[TotalMedicalMedicareAllowedAmount]' />
          <map key='[TotalMedicalMedicarePaymentAmount]' value='[FactProviderDetail].[TotalMedicalMedicarePaymentAmount]' />
          <map key='[TotalMedicalSubmittedChargeAmount]' value='[FactProviderDetail].[TotalMedicalSubmittedChargeAmount]' />
          <map key='[ZipCode]' value='[DimProviderAddress].[ZipCode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>NPI</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NPI]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NPI</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfDrugServices</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfDrugServices]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfDrugServices</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfMedicareBeneficiariesWithDrugServices</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfMedicareBeneficiariesWithDrugServices]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfMedicareBeneficiariesWithDrugServices</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDrugSubmittedChargeAmount</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TotalDrugSubmittedChargeAmount]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>TotalDrugSubmittedChargeAmount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDrugMedicareAllowedAmount</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TotalDrugMedicareAllowedAmount]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>TotalDrugMedicareAllowedAmount</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDrugMedicarePaymentAmount</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TotalDrugMedicarePaymentAmount]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>TotalDrugMedicarePaymentAmount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberofMedical Services</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberofMedical Services]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberofMedical Services</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfMedicareBeneficiariesWithMedicalServices</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfMedicareBeneficiariesWithMedicalServices]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfMedicareBeneficiariesWithMedicalServices</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalMedicalMedicareAllowedAmount</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TotalMedicalMedicareAllowedAmount]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>TotalMedicalMedicareAllowedAmount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalMedicalMedicarePaymentAmount</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TotalMedicalMedicarePaymentAmount]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>TotalMedicalMedicarePaymentAmount</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfBeneficiaries_Age_65_To_74</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfBeneficiaries_Age_65_To_74]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfBeneficiaries_Age_65_To_74</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfBeneficiaries_Age_75_ To_84</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfBeneficiaries_Age_75_ To_84]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfBeneficiaries_Age_75_ To_84</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfBeneficiaries_Age_ Greater_84</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfBeneficiaries_Age_ Greater_84]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfBeneficiaries_Age_ Greater_84</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfFemaleBeneficiaries</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfFemaleBeneficiaries]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfFemaleBeneficiaries</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfBlackOrAfricanAmerican_Beneficiaries</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfBlackOrAfricanAmerican_Beneficiaries]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfBlackOrAfricanAmerican_Beneficiaries</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfAsianPacificIslander_ Beneficiaries</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfAsianPacificIslander_ Beneficiaries]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfAsianPacificIslander_ Beneficiaries</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfHispanic_Beneficiaries</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfHispanic_Beneficiaries]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfHispanic_Beneficiaries</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfAmerican Indian_AlaskaNative_Beneficiaries</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfAmerican Indian_AlaskaNative_Beneficiaries]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfAmerican Indian_AlaskaNative_Beneficiaries</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfBeneficiaries_WithRaceNotElsewhereClassified</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfBeneficiaries_WithRaceNotElsewhereClassified]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfBeneficiaries_WithRaceNotElsewhereClassified</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfBeneficiaries_AgeLess_ 65</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfBeneficiaries_AgeLess_ 65]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfBeneficiaries_AgeLess_ 65</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfMaleBeneficiaries</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfMaleBeneficiaries]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>NumberOfMaleBeneficiaries</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RecordedYear</remote-name>
            <remote-type>3</remote-type>
            <local-name>[RecordedYear]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>RecordedYear</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Of_BeneficiariesIdentifiedWithHeartFailure</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number_Of_BeneficiariesIdentifiedWithHeartFailure]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>Number_Of_BeneficiariesIdentifiedWithHeartFailure</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Of_BeneficiariesIdentifiedWithCancer</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number_Of_BeneficiariesIdentifiedWithCancer]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>Number_Of_BeneficiariesIdentifiedWithCancer</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Of_BeneficiariesIdentifiedWithDiabetes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number_Of_BeneficiariesIdentifiedWithDiabetes]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>Number_Of_BeneficiariesIdentifiedWithDiabetes</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EnrollmentID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EnrollmentID]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>EnrollmentID</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DMEPOSClaim_IND</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DMEPOSClaim_IND]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>DMEPOSClaim_IND</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HHAClaim_IND</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HHAClaim_IND]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>HHAClaim_IND</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProviderTypeCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ProviderTypeCode]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>ProviderTypeCode</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProviderNameID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProviderNameID]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>ProviderNameID</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProviderAddressID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProviderAddressID]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>ProviderAddressID</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalMedicalSubmittedChargeAmount</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TotalMedicalSubmittedChargeAmount]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>TotalMedicalSubmittedChargeAmount</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LastUpdatedDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[LastUpdatedDate]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>LastUpdatedDate</remote-alias>
            <ordinal>36</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2'>true</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[FactProviderDetail]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProviderAddressID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProviderAddressID (DimProviderAddress)]</local-name>
            <parent-name>[DimProviderAddress]</parent-name>
            <remote-alias>ProviderAddressID</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[DimProviderAddress]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[DimProviderAddress]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CityName]</local-name>
            <parent-name>[DimProviderAddress]</parent-name>
            <remote-alias>CityName</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[StateCode]</local-name>
            <parent-name>[DimProviderAddress]</parent-name>
            <remote-alias>StateCode</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[DimProviderAddress]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZipCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZipCode]</local-name>
            <parent-name>[DimProviderAddress]</parent-name>
            <remote-alias>ZipCode</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NameID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NameID]</local-name>
            <parent-name>[DimProviderName]</parent-name>
            <remote-alias>NameID</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FirstName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FirstName]</local-name>
            <parent-name>[DimProviderName]</parent-name>
            <remote-alias>FirstName</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LastName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LastName]</local-name>
            <parent-name>[DimProviderName]</parent-name>
            <remote-alias>LastName</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiddleName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MiddleName]</local-name>
            <parent-name>[DimProviderName]</parent-name>
            <remote-alias>MiddleName</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProviderTypeCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ProviderTypeCode (DimProviderType)]</local-name>
            <parent-name>[DimProviderType]</parent-name>
            <remote-alias>ProviderTypeCode</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProviderTypeDescription</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ProviderTypeDescription]</local-name>
            <parent-name>[DimProviderType]</parent-name>
            <remote-alias>ProviderTypeDescription</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Full Name' datatype='string' name='[Calculation_1006836034810609664]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[FirstName] + &quot; &quot; + [MiddleName]+ &quot; &quot; + [LastName]' />
      </column>
      <column caption='Total Number of Services' datatype='integer' name='[Calculation_1006836034811060225]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NumberofMedical Services] + [NumberOfDrugServices]' />
      </column>
      <column caption='Total Number of Beneficiaries (Medical + Drug)' datatype='integer' name='[Calculation_1006836034811658242]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NumberOfMedicareBeneficiariesWithDrugServices] + [NumberOfMedicareBeneficiariesWithMedicalServices]' />
      </column>
      <column caption='Total Medicare Payment Amount' datatype='real' name='[Calculation_1006836034812153859]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalDrugMedicarePaymentAmount] + [TotalMedicalMedicarePaymentAmount]' />
      </column>
      <column caption='Total Medicare Allowed Amount' datatype='real' name='[Calculation_1006836034812710916]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalDrugMedicareAllowedAmount] + [TotalMedicalMedicareAllowedAmount]' />
      </column>
      <column caption='Total Medicare Submitted Charge Amount' datatype='real' name='[Calculation_1006836034813050885]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalDrugSubmittedChargeAmount]+ [TotalMedicalSubmittedChargeAmount]' />
      </column>
      <column caption='Full Address' datatype='string' name='[Calculation_1006836035223187462]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[AddressLine1] + &quot;,&quot; + [CityName]' />
      </column>
      <column caption='Pearson Correlation Coefficient' datatype='real' name='[Calculation_1006836035266551816]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_CORR(SUM([Calculation_1006836034812710916]), sum([Calculation_1006836034812153859]), -12,0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
      <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='DMEPOSClaim IND' datatype='string' name='[DMEPOSClaim_IND]' role='dimension' type='nominal' />
      <column caption='Enrollment ID' datatype='integer' name='[EnrollmentID]' role='dimension' type='ordinal' />
      <column caption='First Name' datatype='string' name='[FirstName]' role='dimension' type='nominal' />
      <column caption='HHAClaim IND' datatype='string' name='[HHAClaim_IND]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='Last Name' datatype='string' name='[LastName]' role='dimension' type='nominal' />
      <column caption='Last Updated Date' datatype='datetime' name='[LastUpdatedDate]' role='dimension' type='ordinal' />
      <column caption='Middle Name' datatype='string' name='[MiddleName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[NPI]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Name ID' datatype='integer' name='[NameID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='NumberOfAmerican Indian AlaskaNative Beneficiaries' datatype='integer' name='[NumberOfAmerican Indian_AlaskaNative_Beneficiaries]' role='measure' type='quantitative' />
      <column caption='NumberOfAsianPacificIslander  Beneficiaries' datatype='integer' name='[NumberOfAsianPacificIslander_ Beneficiaries]' role='measure' type='quantitative' />
      <column caption='NumberOfBeneficiaries AgeLess  65' datatype='integer' name='[NumberOfBeneficiaries_AgeLess_ 65]' role='measure' type='quantitative' />
      <column caption='NumberOfBeneficiaries Age  Greater 84' datatype='integer' name='[NumberOfBeneficiaries_Age_ Greater_84]' role='measure' type='quantitative' />
      <column caption='NumberOfBeneficiaries Age 65 To 74' datatype='integer' name='[NumberOfBeneficiaries_Age_65_To_74]' role='measure' type='quantitative' />
      <column caption='NumberOfBeneficiaries Age 75  To 84' datatype='integer' name='[NumberOfBeneficiaries_Age_75_ To_84]' role='measure' type='quantitative' />
      <column caption='NumberOfBeneficiaries WithRaceNotElsewhereClassified' datatype='integer' name='[NumberOfBeneficiaries_WithRaceNotElsewhereClassified]' role='measure' type='quantitative' />
      <column caption='NumberOfBlackOrAfricanAmerican Beneficiaries' datatype='integer' name='[NumberOfBlackOrAfricanAmerican_Beneficiaries]' role='measure' type='quantitative' />
      <column caption='Number Of Drug Services' datatype='integer' name='[NumberOfDrugServices]' role='measure' type='quantitative' />
      <column caption='Number Of Female Beneficiaries' datatype='integer' name='[NumberOfFemaleBeneficiaries]' role='measure' type='quantitative' />
      <column caption='NumberOfHispanic Beneficiaries' datatype='integer' name='[NumberOfHispanic_Beneficiaries]' role='measure' type='quantitative' />
      <column caption='Number Of Male Beneficiaries' datatype='integer' name='[NumberOfMaleBeneficiaries]' role='measure' type='quantitative' />
      <column caption='Number Of Medicare Beneficiaries With Drug Services' datatype='integer' name='[NumberOfMedicareBeneficiariesWithDrugServices]' role='measure' type='quantitative' />
      <column caption='Number Of Medicare Beneficiaries With Medical Services' datatype='integer' name='[NumberOfMedicareBeneficiariesWithMedicalServices]' role='measure' type='quantitative' />
      <column caption='Number Of BeneficiariesIdentifiedWithAtrialFibrillation' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation]' role='measure' type='quantitative' />
      <column caption='Number Of BeneficiariesIdentifiedWithCancer' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithCancer]' role='measure' type='quantitative' />
      <column caption='Number Of BeneficiariesIdentifiedWithChronicKidneyDisease' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease]' role='measure' type='quantitative' />
      <column caption='Number Of BeneficiariesIdentifiedWithDiabetes' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithDiabetes]' role='measure' type='quantitative' />
      <column caption='Number Of BeneficiariesIdentifiedWithHeartFailure' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithHeartFailure]' role='measure' type='quantitative' />
      <column caption='Number Of BeneficiariesIdentifiedWithRheumatoidArthritis Osteoarthritis' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[ProviderAddressID (DimProviderAddress)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Provider Address ID' datatype='integer' name='[ProviderAddressID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Provider Name ID' datatype='integer' name='[ProviderNameID]' role='dimension' type='ordinal' />
      <column caption='Provider Type Code' datatype='string' name='[ProviderTypeCode]' role='dimension' type='nominal' />
      <column caption='Provider Type Description' datatype='string' name='[ProviderTypeDescription]' role='dimension' type='nominal' />
      <column caption='Recorded Year' datatype='integer' name='[RecordedYear]' role='dimension' type='ordinal' />
      <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Drug Medicare Allowed Amount' datatype='real' name='[TotalDrugMedicareAllowedAmount]' role='measure' type='quantitative' />
      <column caption='Total Drug Medicare Payment Amount' datatype='real' name='[TotalDrugMedicarePaymentAmount]' role='measure' type='quantitative' />
      <column caption='Total Drug Submitted Charge Amount' datatype='real' name='[TotalDrugSubmittedChargeAmount]' role='measure' type='quantitative' />
      <column caption='Total Medical Medicare Allowed Amount' datatype='real' name='[TotalMedicalMedicareAllowedAmount]' role='measure' type='quantitative' />
      <column caption='Total Medical Submitted Charge Amount' datatype='real' name='[TotalMedicalSubmittedChargeAmount]' role='measure' type='quantitative' />
      <column caption='Zip Code' datatype='string' name='[ZipCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[NPI]' derivation='Count' name='[cnt:NPI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfBeneficiaries_Age_ Greater_84]' derivation='Max' name='[max:NumberOfBeneficiaries_Age_ Greater_84:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NPI]' derivation='None' name='[none:NPI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NPI]' derivation='Sum' name='[sum:NPI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfAmerican Indian_AlaskaNative_Beneficiaries]' derivation='Sum' name='[sum:NumberOfAmerican Indian_AlaskaNative_Beneficiaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfAsianPacificIslander_ Beneficiaries]' derivation='Sum' name='[sum:NumberOfAsianPacificIslander_ Beneficiaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfBeneficiaries_AgeLess_ 65]' derivation='Sum' name='[sum:NumberOfBeneficiaries_AgeLess_ 65:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfBeneficiaries_Age_ Greater_84]' derivation='Sum' name='[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfBeneficiaries_Age_65_To_74]' derivation='Sum' name='[sum:NumberOfBeneficiaries_Age_65_To_74:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfBeneficiaries_Age_75_ To_84]' derivation='Sum' name='[sum:NumberOfBeneficiaries_Age_75_ To_84:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfBeneficiaries_WithRaceNotElsewhereClassified]' derivation='Sum' name='[sum:NumberOfBeneficiaries_WithRaceNotElsewhereClassified:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfBlackOrAfricanAmerican_Beneficiaries]' derivation='Sum' name='[sum:NumberOfBlackOrAfricanAmerican_Beneficiaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfDrugServices]' derivation='Sum' name='[sum:NumberOfDrugServices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfFemaleBeneficiaries]' derivation='Sum' name='[sum:NumberOfFemaleBeneficiaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfMaleBeneficiaries]' derivation='Sum' name='[sum:NumberOfMaleBeneficiaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfMedicareBeneficiariesWithDrugServices]' derivation='Sum' name='[sum:NumberOfMedicareBeneficiariesWithDrugServices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumberOfMedicareBeneficiariesWithMedicalServices]' derivation='Sum' name='[sum:NumberOfMedicareBeneficiariesWithMedicalServices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation]' derivation='Sum' name='[sum:Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number_Of_BeneficiariesIdentifiedWithCancer]' derivation='Sum' name='[sum:Number_Of_BeneficiariesIdentifiedWithCancer:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease]' derivation='Sum' name='[sum:Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number_Of_BeneficiariesIdentifiedWithDiabetes]' derivation='Sum' name='[sum:Number_Of_BeneficiariesIdentifiedWithDiabetes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number_Of_BeneficiariesIdentifiedWithHeartFailure]' derivation='Sum' name='[sum:Number_Of_BeneficiariesIdentifiedWithHeartFailure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis]' derivation='Sum' name='[sum:Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='CountryCode, ZipCode'>
          <field>[CountryCode]</field>
          <field>[ZipCode]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.565934' measure-ordering='alphabetic' measure-percentage='0.434066' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfFemaleBeneficiaries:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[cnt:NPI:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:NPI:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NPI:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Number_Of_BeneficiariesIdentifiedWithDiabetes:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBlackOrAfricanAmerican_Beneficiaries:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfMaleBeneficiaries:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Number_Of_BeneficiariesIdentifiedWithHeartFailure:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_AgeLess_ 65:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_65_To_74:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfAmerican Indian_AlaskaNative_Beneficiaries:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfAsianPacificIslander_ Beneficiaries:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_75_ To_84:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_WithRaceNotElsewhereClassified:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfMedicareBeneficiariesWithDrugServices:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfDrugServices:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Number_Of_BeneficiariesIdentifiedWithCancer:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:NumberOfBeneficiaries_Age_ Greater_84:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfMedicareBeneficiariesWithMedicalServices:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Top Providers for Disease' name='[Action1]'>
      <activation type='on-select' />
      <source datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' type='datasource'>
        <exclude-sheet name='Count of Top Providers per Zipcode for Particular Age group in 2013' />
        <exclude-sheet name='Number of Services Distribution across States in 2012' />
        <exclude-sheet name='Racewise beneficiary distribution in 2015' />
        <exclude-sheet name='Statewise Medicare Submitted Charge Amount comparison' />
        <exclude-sheet name='Total Medicare Payment Amount over years' />
        <exclude-sheet name='Beneficiary Count over years (Gender Classification)' />
      </source>
      <link caption='' expression='https://www.google.com/search?q=&lt;[Calculation_1006836034810609664]&gt; + &lt;[Calculation_1006836035223187462]&gt;' />
    </action>
    <action caption='Top Providers for Age group' name='[Action2]'>
      <activation type='on-select' />
      <source datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' type='datasource'>
        <exclude-sheet name='Number of Services Distribution across States in 2012' />
        <exclude-sheet name='Racewise beneficiary distribution in 2015' />
        <exclude-sheet name='Statewise Medicare Submitted Charge Amount comparison' />
        <exclude-sheet name='Top Providers for Heart Failure in 2015' />
        <exclude-sheet name='Total Medicare Payment Amount over years' />
        <exclude-sheet name='Beneficiary Count over years (Gender Classification)' />
      </source>
      <link caption='' expression='https://www.google.com/search?q=&lt;[StateCode]&gt; + &lt;[ZipCode]&gt;' />
    </action>
    <datasources>
      <datasource caption='FactProviderDetail (MedicareDW)' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' />
    </datasources>
    <datasource-dependencies datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)'>
      <column caption='Full Name' datatype='string' name='[Calculation_1006836034810609664]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[FirstName] + &quot; &quot; + [MiddleName]+ &quot; &quot; + [LastName]' />
      </column>
      <column caption='Full Address' datatype='string' name='[Calculation_1006836035223187462]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[AddressLine1] + &quot;,&quot; + [CityName]' />
      </column>
      <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Zip Code' datatype='string' name='[ZipCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Beneficiary Count over years (Gender Classification)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactProviderDetail (MedicareDW)' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)'>
            <column caption='Number Of Female Beneficiaries' datatype='integer' name='[NumberOfFemaleBeneficiaries]' role='measure' type='quantitative' />
            <column caption='Number Of Male Beneficiaries' datatype='integer' name='[NumberOfMaleBeneficiaries]' role='measure' type='quantitative' />
            <column caption='Recorded Year' datatype='integer' name='[RecordedYear]' role='dimension' type='ordinal' />
            <column-instance column='[RecordedYear]' derivation='None' name='[none:RecordedYear:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NumberOfFemaleBeneficiaries]' derivation='Sum' name='[sum:NumberOfFemaleBeneficiaries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumberOfMaleBeneficiaries]' derivation='Sum' name='[sum:NumberOfMaleBeneficiaries:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfMaleBeneficiaries:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfFemaleBeneficiaries:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfMaleBeneficiaries:qk] + [federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfFemaleBeneficiaries:qk])</rows>
        <cols>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</cols>
      </table>
      <simple-id uuid='{94547609-4DBB-4499-B269-F5E26B02971B}' />
    </worksheet>
    <worksheet name='Count of Top Providers per Zipcode for Particular Age group in 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactProviderDetail (MedicareDW)' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)'>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[NPI]' role='measure' type='quantitative' />
            <column caption='NumberOfBeneficiaries Age  Greater 84' datatype='integer' name='[NumberOfBeneficiaries_Age_ Greater_84]' role='measure' type='quantitative' />
            <column caption='Recorded Year' datatype='integer' name='[RecordedYear]' role='dimension' type='ordinal' />
            <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Zip Code' datatype='string' name='[ZipCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[NPI]' derivation='Count' name='[cnt:NPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CityName]' derivation='None' name='[none:CityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryCode]' derivation='None' name='[none:CountryCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RecordedYear]' derivation='None' name='[none:RecordedYear:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StateCode]' derivation='None' name='[none:StateCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZipCode]' derivation='None' name='[none:ZipCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[NumberOfBeneficiaries_Age_ Greater_84]' derivation='Sum' name='[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]'>
            <groupfilter function='member' level='[none:RecordedYear:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:StateCode:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;AA&quot;' function='range' level='[none:StateCode:nk]' to='&quot;LA&quot;' />
                <groupfilter from='&quot;MD&quot;' function='range' level='[none:StateCode:nk]' to='&quot;ZZ&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]' included-values='in-range'>
            <min>4116</min>
            <max>42806</max>
          </filter>
          <slices>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]</column>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</column>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Longitude (generated)]' field-type='quantitative' max='-7791233.1966185179' min='-8160900.3178069163' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Latitude (generated)]' field-type='quantitative' max='5318334.2300558593' min='5031214.1442718748' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cecee5</color>
                <color>#aeaeda</color>
                <color>#9090ce</color>
                <color>#7575c3</color>
                <color>#5c5cb8</color>
                <color>#4545ac</color>
                <color>#3030a1</color>
                <color>#1d1d95</color>
                <color>#0d0d8a</color>
                <color>#00007f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]' />
              <text column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:ZipCode:nk]' />
              <text column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CityName:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CountryCode:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[cnt:NPI:qk]' />
              <geometry column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Latitude (generated)]</rows>
        <cols>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DFF652B3-3A99-40F2-A476-1AEB0495DE9F}' />
    </worksheet>
    <worksheet name='Number of Services Distribution across States in 2012'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactProviderDetail (MedicareDW)' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)'>
            <column caption='Total Number of Services' datatype='integer' name='[Calculation_1006836034811060225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NumberofMedical Services] + [NumberOfDrugServices]' />
            </column>
            <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Number Of Drug Services' datatype='integer' name='[NumberOfDrugServices]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NumberofMedical Services]' role='measure' type='quantitative' />
            <column caption='Recorded Year' datatype='integer' name='[RecordedYear]' role='dimension' type='ordinal' />
            <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[CountryCode]' derivation='None' name='[none:CountryCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RecordedYear]' derivation='None' name='[none:RecordedYear:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StateCode]' derivation='None' name='[none:StateCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1006836034811060225]' derivation='Sum' name='[sum:Calculation_1006836034811060225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumberOfDrugServices]' derivation='Sum' name='[sum:NumberOfDrugServices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumberofMedical Services]' derivation='Sum' name='[sum:NumberofMedical Services:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]'>
            <groupfilter function='member' level='[none:RecordedYear:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Longitude (generated)]' field-type='quantitative' max='35405369.939684406' min='26171686.458355181' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Latitude (generated)]' field-type='quantitative' max='9071650.3674291018' min='219117.66759677744' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Calculation_1006836034811060225:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9ded2</color>
                <color>#e2ccb5</color>
                <color>#dbba99</color>
                <color>#d4aa7f</color>
                <color>#cd9a66</color>
                <color>#c68a4f</color>
                <color>#bf7c39</color>
                <color>#b86e24</color>
                <color>#b16111</color>
                <color>#aa5500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CountryCode:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfDrugServices:qk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberofMedical Services:qk]' />
              <color column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Calculation_1006836034811060225:qk]' />
              <geometry column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Latitude (generated)]</rows>
        <cols>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{07502091-4BD6-45AE-8F69-9FF4F376A10B}' />
    </worksheet>
    <worksheet name='Racewise beneficiary distribution in 2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactProviderDetail (MedicareDW)' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)'>
            <column caption='NumberOfAmerican Indian AlaskaNative Beneficiaries' datatype='integer' name='[NumberOfAmerican Indian_AlaskaNative_Beneficiaries]' role='measure' type='quantitative' />
            <column caption='NumberOfAsianPacificIslander  Beneficiaries' datatype='integer' name='[NumberOfAsianPacificIslander_ Beneficiaries]' role='measure' type='quantitative' />
            <column caption='NumberOfBeneficiaries WithRaceNotElsewhereClassified' datatype='integer' name='[NumberOfBeneficiaries_WithRaceNotElsewhereClassified]' role='measure' type='quantitative' />
            <column caption='NumberOfBlackOrAfricanAmerican Beneficiaries' datatype='integer' name='[NumberOfBlackOrAfricanAmerican_Beneficiaries]' role='measure' type='quantitative' />
            <column caption='Recorded Year' datatype='integer' name='[RecordedYear]' role='dimension' type='ordinal' />
            <column-instance column='[RecordedYear]' derivation='None' name='[none:RecordedYear:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NumberOfAmerican Indian_AlaskaNative_Beneficiaries]' derivation='Sum' name='[sum:NumberOfAmerican Indian_AlaskaNative_Beneficiaries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumberOfAsianPacificIslander_ Beneficiaries]' derivation='Sum' name='[sum:NumberOfAsianPacificIslander_ Beneficiaries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumberOfBeneficiaries_WithRaceNotElsewhereClassified]' derivation='Sum' name='[sum:NumberOfBeneficiaries_WithRaceNotElsewhereClassified:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumberOfBlackOrAfricanAmerican_Beneficiaries]' derivation='Sum' name='[sum:NumberOfBlackOrAfricanAmerican_Beneficiaries:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfAmerican Indian_AlaskaNative_Beneficiaries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfAsianPacificIslander_ Beneficiaries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_WithRaceNotElsewhereClassified:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBlackOrAfricanAmerican_Beneficiaries:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]'>
            <groupfilter function='member' level='[none:RecordedYear:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[:Measure Names]</column>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[:Measure Names]' />
              <text column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{92EC3022-4D4F-45DD-A1DE-986E04DBEB02}' />
    </worksheet>
    <worksheet name='Statewise Medicare Submitted Charge Amount comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactProviderDetail (MedicareDW)' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)'>
            <column caption='Total Medicare Submitted Charge Amount' datatype='real' name='[Calculation_1006836034813050885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalDrugSubmittedChargeAmount]+ [TotalMedicalSubmittedChargeAmount]' />
            </column>
            <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Recorded Year' datatype='integer' name='[RecordedYear]' role='dimension' type='ordinal' />
            <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Drug Submitted Charge Amount' datatype='real' name='[TotalDrugSubmittedChargeAmount]' role='measure' type='quantitative' />
            <column caption='Total Medical Submitted Charge Amount' datatype='real' name='[TotalMedicalSubmittedChargeAmount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1006836034813050885]' derivation='Max' name='[max:Calculation_1006836034813050885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryCode]' derivation='None' name='[none:CountryCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RecordedYear]' derivation='None' name='[none:RecordedYear:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StateCode]' derivation='None' name='[none:StateCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1006836034813050885]' derivation='Sum' name='[sum:Calculation_1006836034813050885:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]'>
            <groupfilter function='level-members' level='[none:RecordedYear:ok]' />
          </filter>
          <slices>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Longitude (generated)]' field-type='quantitative' max='35827363.996888041' min='26284819.653659519' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Latitude (generated)]' field-type='quantitative' max='7676191.45521574' min='232386.60156915616' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Calculation_1006836034813050885:qk]' />
              <text column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CountryCode:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Calculation_1006836034813050885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Latitude (generated)]</rows>
        <cols>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DD174158-D134-450D-9816-927E8B3978B1}' />
    </worksheet>
    <worksheet name='Top Providers for Heart Failure in 2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactProviderDetail (MedicareDW)' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column caption='Full Name' datatype='string' name='[Calculation_1006836034810609664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[FirstName] + &quot; &quot; + [MiddleName]+ &quot; &quot; + [LastName]' />
            </column>
            <column caption='Full Address' datatype='string' name='[Calculation_1006836035223187462]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[AddressLine1] + &quot;,&quot; + [CityName]' />
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='First Name' datatype='string' name='[FirstName]' role='dimension' type='nominal' />
            <column caption='Last Name' datatype='string' name='[LastName]' role='dimension' type='nominal' />
            <column caption='Middle Name' datatype='string' name='[MiddleName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[NPI]' role='measure' type='quantitative' />
            <column caption='Number Of BeneficiariesIdentifiedWithAtrialFibrillation' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation]' role='measure' type='quantitative' />
            <column caption='Number Of BeneficiariesIdentifiedWithCancer' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithCancer]' role='measure' type='quantitative' />
            <column caption='Number Of BeneficiariesIdentifiedWithChronicKidneyDisease' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease]' role='measure' type='quantitative' />
            <column caption='Number Of BeneficiariesIdentifiedWithDiabetes' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithDiabetes]' role='measure' type='quantitative' />
            <column caption='Number Of BeneficiariesIdentifiedWithHeartFailure' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithHeartFailure]' role='measure' type='quantitative' />
            <column caption='Number Of BeneficiariesIdentifiedWithRheumatoidArthritis Osteoarthritis' datatype='integer' name='[Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis]' role='measure' type='quantitative' />
            <column caption='Recorded Year' datatype='integer' name='[RecordedYear]' role='dimension' type='ordinal' />
            <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation]' derivation='Max' name='[max:Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Of_BeneficiariesIdentifiedWithCancer]' derivation='Max' name='[max:Number_Of_BeneficiariesIdentifiedWithCancer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease]' derivation='Max' name='[max:Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Of_BeneficiariesIdentifiedWithDiabetes]' derivation='Max' name='[max:Number_Of_BeneficiariesIdentifiedWithDiabetes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Of_BeneficiariesIdentifiedWithHeartFailure]' derivation='Max' name='[max:Number_Of_BeneficiariesIdentifiedWithHeartFailure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis]' derivation='Max' name='[max:Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1006836034810609664]' derivation='None' name='[none:Calculation_1006836034810609664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1006836035223187462]' derivation='None' name='[none:Calculation_1006836035223187462:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryCode]' derivation='None' name='[none:CountryCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[NPI]' derivation='None' name='[none:NPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RecordedYear]' derivation='None' name='[none:RecordedYear:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StateCode]' derivation='None' name='[none:StateCode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithHeartFailure:qk]' included-values='in-range'>
            <min>1489</min>
            <max>1633</max>
          </filter>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]'>
            <groupfilter function='member' level='[none:RecordedYear:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]'>
            <groupfilter function='level-members' level='[none:StateCode:nk]' />
          </filter>
          <slices>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</column>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]</column>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithHeartFailure:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Longitude (generated)]' field-type='quantitative' max='-7626240.6751015326' min='-12994674.676718634' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Latitude (generated)]' field-type='quantitative' max='6122316.8276036056' min='2160459.3415815765' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:Calculation_1006836034810609664:nk]' />
              <text column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:Calculation_1006836035223187462:nk]' />
              <text column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithHeartFailure:qk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CountryCode:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:NPI:qk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation:qk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithCancer:qk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithChronicKidneyDisease:qk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithDiabetes:qk]' />
              <lod column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithRheumatoidArthritis_Osteoarthritis:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Latitude (generated)]</rows>
        <cols>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6BEC37BD-2C89-4E98-B36D-76E861092555}' />
    </worksheet>
    <worksheet name='Total Medicare Payment Amount over years'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactProviderDetail (MedicareDW)' name='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)'>
            <column caption='Total Medicare Payment Amount' datatype='real' name='[Calculation_1006836034812153859]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalDrugMedicarePaymentAmount] + [TotalMedicalMedicarePaymentAmount]' />
            </column>
            <column caption='Recorded Year' datatype='integer' name='[RecordedYear]' role='dimension' type='ordinal' />
            <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Drug Medicare Payment Amount' datatype='real' name='[TotalDrugMedicarePaymentAmount]' role='measure' type='quantitative' />
            <column datatype='real' name='[TotalMedicalMedicarePaymentAmount]' role='measure' type='quantitative' />
            <column-instance column='[RecordedYear]' derivation='None' name='[none:RecordedYear:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StateCode]' derivation='None' name='[none:StateCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1006836034812153859]' derivation='Sum' name='[sum:Calculation_1006836034812153859:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]'>
            <groupfilter from='2012' function='range' level='[none:RecordedYear:ok]' to='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Calculation_1006836034812153859:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk] * [federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Calculation_1006836034812153859:qk])</rows>
        <cols>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</cols>
      </table>
      <simple-id uuid='{72C54E7E-D979-4B34-AE33-567CF7847E76}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Beneficiary Count over years (Gender Classification)'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B76D9813-FD8B-4338-B687-6C6DCDE4E9A9}' />
    </window>
    <window class='worksheet' name='Number of Services Distribution across States in 2012'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Calculation_1006836034811060225:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation:ok]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:Calculation_1006836034810609664:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CountryCode:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:ZipCode:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:Calculation_1006836034811060225:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4277047C-94E4-4D6C-807C-05F2AF97D108}' />
    </window>
    <window class='worksheet' name='Top Providers for Heart Failure in 2015'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='117'>
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithHeartFailure:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]' type='filter' />
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[max:Number_Of_BeneficiariesIdentifiedWithAtrialFibrillation:ok]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:Calculation_1006836034810609664:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:Calculation_1006836035223187462:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:ZipCode:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{02DA07DB-4912-47B9-A02C-634059BF3FBE}' />
    </window>
    <window class='worksheet' name='Count of Top Providers per Zipcode for Particular Age group in 2013'>
      <cards>
        <edge name='left'>
          <strip size='157'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]' type='filter' />
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]' type='filter' />
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfBeneficiaries_Age_ Greater_84:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[:Measure Names]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:Calculation_1006836034810609664:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:Calculation_1006836035223187462:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CityName:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CountryCode:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:NPI:qk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:ZipCode:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberofMedical Services:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9D321F86-B935-4C94-84AA-4272E6E59491}' />
    </window>
    <window class='worksheet' name='Racewise beneficiary distribution in 2015'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='242'>
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[:Measure Names]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[sum:NumberOfAsianPacificIslander_ Beneficiaries:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9228F3C-54F3-416F-9028-AE4C823AF1CA}' />
    </window>
    <window class='worksheet' name='Total Medicare Payment Amount over years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9094881-D409-4202-A628-94717B797AEE}' />
    </window>
    <window class='worksheet' maximized='true' name='Statewise Medicare Submitted Charge Amount comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:RecordedYear:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:CountryCode:nk]</field>
            <field>[federated.0njk7ea06da5mv14w1yhz0g6xmym (copy)].[none:StateCode:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{0F909A5E-AD90-4650-B880-81FA5054E48B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Beneficiary Count over years (Gender Classification)' width='192'>
      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
      /x8+sHF0Ht/Q1AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Count of Top Providers per Zipcode for Particular Age group in 2013' width='192'>
      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
      rY542fg/oRjEDhA0O+0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Services Distribution across States in 2012' width='192'>
      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
      CFUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Racewise beneficiary distribution in 2015' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Statewise Medicare Submitted Charge Amount comparison' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Providers for Heart Failure in 2015' width='192'>
      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
      YpK0IvcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Medicare Payment Amount over years' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
